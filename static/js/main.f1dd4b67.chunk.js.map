{"version":3,"sources":["actions/actionNames.js","actions/actions.js","helpers/isInteger.js","sagas/saga.js","common/constants.js","language/languageEN.js","language/languagePL.js","state/initialState.js","reducers/paymentsReducer.js","reducers/reducers.js","css/cssSimpleTheme.js","components/displayViews/reusable/utilityComponents.js","components/displayViews/default/DefaultScreenContent.js","components/displayViews/default/DefaultLeftColumn.js","components/displayViews/default/DefaultRightColumn.js","components/displayViews/default/DefaultScreen.js","components/displayViews/balance/BalanceScreenContent.js","components/displayViews/balance/BalanceLeftColumn.js","components/displayViews/balance/BalanceRightColumn.js","components/displayViews/balance/BalanceScreen.js","components/displayViews/help/HelpScreenContent.js","components/displayViews/help/HelpLeftColumn.js","components/displayViews/help/HelpRightColumn.js","components/displayViews/help/HelpScreen.js","components/displayViews/language/LanguageScreenContent.js","components/displayViews/language/LanguageLeftColumn.js","components/displayViews/language/LanguageRightColumn.js","components/displayViews/language/LanguageScreen.js","components/displayViews/deposit/DepositScreenContent.js","components/displayViews/deposit/DepositLeftColumn.js","components/displayViews/deposit/DepositRightColumn.js","components/displayViews/deposit/DepositScreen.js","components/displayViews/withdrawal/WithdrawalScreenContent.js","components/displayViews/withdrawal/WithdrawalLeftColumn.js","components/displayViews/withdrawal/WithdrawalRightColumn.js","components/displayViews/withdrawal/WithdrawalScreen.js","components/displayViews/confirmDeposit/ConfirmScreenContent.js","components/displayViews/confirmDeposit/ConfirmLeftColumn.js","components/displayViews/confirmDeposit/ConfirmRightColumn.js","components/displayViews/confirmDeposit/ConfirmScreen.js","components/displayViews/confirmWithdrawal/ConfirmScreenContent.js","components/displayViews/confirmWithdrawal/ConfirmLeftColumn.js","components/displayViews/confirmWithdrawal/ConfirmRightColumn.js","components/displayViews/confirmWithdrawal/ConfirmScreen.js","common/history.js","components/Screen.js","components/Keyboard.js","App.js","serviceWorker.js","index.js"],"names":["CHANGE_LANG_REQUEST","SET_MONEY_AMOUNT_REQUEST","DEPOSIT_MONEY_REQUEST","WITHDRAW_MONEY_REQUEST","TRANSACTION_MSG_REQUEST","UNLOCK_NUM_KEYS_REQUEST","LOCK_NUM_KEYS_REQUEST","changeLanguage","language","type","setMoneyAmountRequest","amount","setMoneyAmount","withdrawMoneyRequest","balance","withdrawMoney","depositMoneyRequest","depositMoney","pushTransactionMsg","msg","unlockNumericKeys","lockNumericKeysRequest","lockNumericKeys","isInteger","parsedAmount","parseInt","undefined","dispatchChangeLanguage","dispatchUnlockNumericKeys","dispatchLockNumericKeys","dispatchMoneyAmount","dispatchWithdrawMoney","dispatchDepositMoney","dispatchTransactionMsg","validateDepositValueIsInteger","validateWithdrawValueIsInteger","takeEveryObserver","observeChangeMoneyAmount","observeDepositMoneyRequest","observeTransactionMessageChange","observeNumKeysUnlock","observeNumKeysLock","observeWithrawMoneyRequest","RootSaga","action","put","Object","isValid","call","TRANSACTION_FAIL_MINIMAL_AMOUNT","SUCCESS","TRANSACTION_FAIL","TRANSACTION_FAIL_TOO_FEW_FUNDS","takeEvery","all","fork","constants","LEFT","RIGHT","LANG_PL","LANG_EN","SPACE","GET_HOMEPAGE","GET_BALANCE","GET_DEPOSIT","GET_WITHDRAWAL","GET_LANGUAGE","GET_HELP","GET_CONFIRM","GET_CONFIRM_DEPOSIT","GET_CONFIRM_WITHDRAWAL","QUESTION_MARK","languageEn","WITHDRAWAL","WITHDRAWAL_SCREEN_DESC","DEPOSIT","DEPOSIT_SCREEN_DESC","BALANCE","BLIK_TRANSACTION","BACK","HELP","LANGUAGE","LANGUAGE_SCREEN_DESC","HACK","ATM","BALANCE_SCREEN_DESC","CONTACT","CONTACT_EMAIL","CONTACT_PHONE","POLISH","ENGLISH","PLN","CONFIRM","CONFIRM_DEPOSIT_SCREEN_DESC","CONFIRM_WITHDRAWAL_SCREEN_DESC","PROVIDE_AMOUNT","CANCEL","CUSTOM_AMOUNT","CLEAR","languagePl","initialState","transactionMsg","transactionMoneyAmount","numKeysLocked","paymentsReducer","state","lang","combineReducers","colors","SCREEN","CASE","KEYBOARD","BUTTON_CONFIRM","BUTTON_CLEAR","BUTTON_CANCEL","DISABLED","DISABLED_BG","DESCRIPTION_TEXT","DESCRIPTION","ButtonsColumn","styled","div","Button","button","props","wide","bgColor","margin","buttonBlocked","Display","View","ViewColumn","side","ViewButtonDescriptionContainer","ViewButtonDescription","unsupported","ViewColumnWrapper","ViewTextContainer","ViewMainText","h1","ViewSecondaryText","overwriteColor","fakeInput","DefaultScreenContent","render","React","Component","connect","DefaultLeftColumn","to","disabled","DefaultRightColumn","DefaultScreen","BalanceScreenContent","toFixed","BalanceLeftColumn","BalanceRightColumn","onClick","pushTransactionMsgRequest","mapDispatchToProps","BalanceScreen","HelpScreenContent","HelpLeftColumn","HelpRightColumn","HelpScreen","LanguageScreenContent","LanguageLeftColumn","changeLanguageRequest","LanguageRightColumn","LanguageScreen","DepositScreenContent","DepositLeftColumn","DepositRightColumn","customAmount","DepositScreen","WithdrawalScreenContent","WithdrawalLeftColumn","WithdrawalRightColumn","WithdrawalScreen","ConfirmScreenContent","ConfirmLeftColumn","confirm","ConfirmRightColumn","ConfirmScreen","createBrowserHistory","ScreenContainer","Screen","history","exact","path","component","ConfirmDepositScreen","ConfirmWithdrawalScreen","KeyboardContainer","Keys","KeysRow","Keyboard","cancelTransaction","window","location","pathname","includes","push","confirmTransaction","clearInput","setTransactionMoneyAmount","number","unlockNumericKeysRequest","toString","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1dd4b67.chunk.js","sourcesContent":["export const CHANGE_LANG_REQUEST = 'CHANGE_LANG_REQUEST';\r\nexport const CHANGE_LANG = 'CHANGE_LANG';\r\n\r\nexport const SET_MONEY_AMOUNT_REQUEST = 'SET_MONEY_AMOUNT_REQUEST';\r\nexport const SET_MONEY_AMOUNT = 'SET_MONEY_AMOUNT';\r\n\r\nexport const DEPOSIT_MONEY_REQUEST = 'DEPOSIT_MONEY_REQUEST';\r\nexport const DEPOSIT_MONEY = 'DEPOSIT_MONEY';\r\n\r\nexport const WITHDRAW_MONEY_REQUEST = 'WITHDRAW_MONEY_REQUEST';\r\nexport const WITHDRAW_MONEY= 'WITHDRAW_MONEY';\r\n\r\nexport const TRANSACTION_MSG_REQUEST = 'TRANSACTION_MSG_REQUEST';\r\nexport const TRANSACTION_MSG = 'TRANSACTION_MSG';\r\n\r\nexport const UNLOCK_NUM_KEYS_REQUEST = 'UNLOCK_NUM_KEYS_REQUEST';\r\nexport const UNLOCK_NUM_KEYS = 'UNLOCK_NUM_KEYS';\r\n\r\n\r\nexport const LOCK_NUM_KEYS_REQUEST = 'LOCK_NUM_KEYS_REQUEST';\r\nexport const LOCK_NUM_KEYS = 'LOCK_NUM_KEYS';","import {\r\n    CHANGE_LANG_REQUEST, CHANGE_LANG, SET_MONEY_AMOUNT_REQUEST, SET_MONEY_AMOUNT, DEPOSIT_MONEY_REQUEST, DEPOSIT_MONEY,\r\n    TRANSACTION_MSG, TRANSACTION_MSG_REQUEST, UNLOCK_NUM_KEYS, UNLOCK_NUM_KEYS_REQUEST, LOCK_NUM_KEYS, LOCK_NUM_KEYS_REQUEST,\r\n    WITHDRAW_MONEY_REQUEST, WITHDRAW_MONEY\r\n} from './actionNames';\r\n\r\nconst changeLanguageRequest = (language) => {\r\n    return {\r\n        type: CHANGE_LANG_REQUEST,\r\n        language\r\n    };\r\n};\r\n\r\nconst changeLanguage = (language) => {\r\n    return {\r\n        type: CHANGE_LANG,\r\n        language\r\n    };\r\n};\r\n\r\nconst setMoneyAmountRequest = (amount) => {\r\n    return {\r\n        type: SET_MONEY_AMOUNT_REQUEST,\r\n        amount\r\n    }\r\n};\r\n\r\nconst setMoneyAmount = (amount) => {\r\n    return {\r\n        type: SET_MONEY_AMOUNT,\r\n        amount\r\n    };\r\n};\r\n\r\nconst withdrawMoneyRequest = (amount, language, balance) => {\r\n    return {\r\n        type: WITHDRAW_MONEY_REQUEST,\r\n        amount,\r\n        language,\r\n        balance\r\n    };\r\n};\r\n\r\nconst withdrawMoney = () => {\r\n    return {\r\n        type: WITHDRAW_MONEY\r\n    };\r\n};\r\n\r\nconst depositMoneyRequest = (amount, language) => {\r\n    return {\r\n        type: DEPOSIT_MONEY_REQUEST,\r\n        amount,\r\n        language\r\n    };\r\n};\r\n\r\nconst depositMoney = () => {\r\n    return {\r\n        type: DEPOSIT_MONEY,\r\n    };\r\n};\r\n\r\nconst pushTransactionMsgRequest = (msg) => {\r\n    return {\r\n        type: TRANSACTION_MSG_REQUEST,\r\n        msg\r\n    };\r\n};\r\n\r\nconst pushTransactionMsg = (msg = \"\") => {\r\n    return {\r\n        type: TRANSACTION_MSG,\r\n        msg\r\n    };\r\n};\r\n\r\nconst unlockNumericKeysRequest = () => {\r\n    return {\r\n        type: UNLOCK_NUM_KEYS_REQUEST\r\n    };\r\n};\r\n\r\nconst unlockNumericKeys= () => {\r\n    return {\r\n        type: UNLOCK_NUM_KEYS\r\n    }\r\n};\r\n\r\nconst lockNumericKeysRequest = () => {\r\n    return {\r\n        type: LOCK_NUM_KEYS_REQUEST\r\n    };\r\n};\r\n\r\nconst lockNumericKeys= () => {\r\n    return {\r\n        type: LOCK_NUM_KEYS\r\n    }\r\n};\r\n\r\nexport {\r\n    depositMoneyRequest,\r\n    depositMoney,\r\n    setMoneyAmountRequest,\r\n    setMoneyAmount,\r\n    changeLanguageRequest,\r\n    changeLanguage,\r\n    pushTransactionMsgRequest,\r\n    pushTransactionMsg,\r\n    unlockNumericKeys,\r\n    unlockNumericKeysRequest,\r\n    lockNumericKeysRequest,\r\n    lockNumericKeys,\r\n    withdrawMoneyRequest,\r\n    withdrawMoney\r\n}","// Won't use Number.isInteger() because I want to handle numeric strings too.\r\nconst isInteger = (amount) => {\r\n    try {\r\n        let parsedAmount = parseInt(amount);\r\n\r\n        if (!parsedAmount && parsedAmount !== 0) {\r\n            parsedAmount = undefined;\r\n        }\r\n        \r\n        return parsedAmount;\r\n    } catch {\r\n        return;\r\n    }\r\n};\r\n\r\nexport default isInteger;","import { all, fork, call, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n    CHANGE_LANG_REQUEST, SET_MONEY_AMOUNT_REQUEST, DEPOSIT_MONEY_REQUEST, TRANSACTION_MSG_REQUEST, UNLOCK_NUM_KEYS_REQUEST,\r\n    LOCK_NUM_KEYS_REQUEST, WITHDRAW_MONEY_REQUEST\r\n} from '../actions/actionNames';\r\nimport { changeLanguage, setMoneyAmount, depositMoney, pushTransactionMsg, unlockNumericKeys, lockNumericKeys, withdrawMoney } from '../actions/actions';\r\nimport isInteger from '../helpers/isInteger';\r\n\r\nfunction* dispatchChangeLanguage(action) {\r\n    yield put(changeLanguage(action.language));\r\n}\r\n\r\nfunction* dispatchUnlockNumericKeys() {\r\n    yield put(unlockNumericKeys());\r\n}\r\n\r\nfunction* dispatchLockNumericKeys() {\r\n    yield put(lockNumericKeys());\r\n}\r\n\r\nfunction* dispatchMoneyAmount(action) {\r\n    yield put(setMoneyAmount(action.amount));\r\n}\r\n\r\nfunction* dispatchWithdrawMoney() {\r\n    yield put(withdrawMoney());\r\n}\r\n\r\nfunction* dispatchDepositMoney() {\r\n    yield put(depositMoney());\r\n}\r\n\r\nfunction* dispatchTransactionMsg(msg) {\r\n    msg = msg instanceof Object ? msg.msg : msg; // Handle string, action object\r\n    yield put(pushTransactionMsg(msg));\r\n}\r\n\r\nfunction* validateDepositValueIsInteger(action) {\r\n    const isValid = isInteger(action.amount);\r\n\r\n    if (isValid <= 0) {\r\n        yield call(dispatchTransactionMsg, action.language.TRANSACTION_FAIL_MINIMAL_AMOUNT);\r\n        return;\r\n    }\r\n\r\n    if (isValid) {\r\n        yield call(dispatchTransactionMsg, action.language.SUCCESS);\r\n        yield call(dispatchDepositMoney);\r\n        return;\r\n    }\r\n\r\n    yield call(dispatchTransactionMsg, action.language.TRANSACTION_FAIL);\r\n}\r\n\r\nfunction* validateWithdrawValueIsInteger(action) {\r\n    const isValid = isInteger(action.amount);\r\n\r\n    if (isValid <= 0) {\r\n        yield call(dispatchTransactionMsg, action.language.TRANSACTION_FAIL_MINIMAL_AMOUNT);\r\n        return;\r\n    }\r\n\r\n    if (action.balance < isValid) {\r\n        yield call(dispatchTransactionMsg, action.language.TRANSACTION_FAIL_TOO_FEW_FUNDS);\r\n        return;\r\n    }\r\n\r\n    if (isValid) {\r\n        yield call(dispatchTransactionMsg, action.language.SUCCESS);\r\n        yield call(dispatchWithdrawMoney);\r\n        return;\r\n    }\r\n\r\n    yield call(dispatchTransactionMsg, action.language.TRANSACTION_FAIL);\r\n}\r\n\r\n/*Observers*/\r\nfunction* takeEveryObserver() {\r\n    yield takeEvery(CHANGE_LANG_REQUEST, dispatchChangeLanguage);\r\n}\r\n\r\nfunction* observeChangeMoneyAmount() {\r\n    yield takeEvery(SET_MONEY_AMOUNT_REQUEST, dispatchMoneyAmount);\r\n}\r\n\r\nfunction* observeDepositMoneyRequest() {\r\n    yield takeEvery(DEPOSIT_MONEY_REQUEST, validateDepositValueIsInteger);\r\n}\r\n\r\nfunction* observeTransactionMessageChange() {\r\n    yield takeEvery(TRANSACTION_MSG_REQUEST, dispatchTransactionMsg);\r\n}\r\n\r\nfunction* observeNumKeysUnlock() {\r\n    yield takeEvery(UNLOCK_NUM_KEYS_REQUEST, dispatchUnlockNumericKeys);\r\n}\r\n\r\nfunction* observeNumKeysLock() {\r\n    yield takeEvery(LOCK_NUM_KEYS_REQUEST, dispatchLockNumericKeys);\r\n}\r\n\r\nfunction* observeWithrawMoneyRequest() {\r\n    yield takeEvery(WITHDRAW_MONEY_REQUEST, validateWithdrawValueIsInteger);\r\n}\r\n\r\nexport function* RootSaga() {\r\n    yield all([\r\n        fork(takeEveryObserver),\r\n        fork(observeChangeMoneyAmount),\r\n        fork(observeDepositMoneyRequest),\r\n        fork(observeTransactionMessageChange),\r\n        fork(observeNumKeysLock),\r\n        fork(observeNumKeysUnlock),\r\n        fork(observeWithrawMoneyRequest)\r\n    ]);\r\n};","const constants = {\r\n    LEFT: 'LEFT',\r\n    RIGHT: 'RIGHT',\r\n    LANG_PL: 'PL',\r\n    LANG_EN: 'EN',\r\n    SPACE: ' ',\r\n    GET_HOMEPAGE: '/',\r\n    GET_BALANCE: '/balance',\r\n    GET_DEPOSIT: '/deposit',\r\n    GET_WITHDRAWAL: '/withdrawal',\r\n    GET_LANGUAGE: '/language',\r\n    GET_HELP: '/help',\r\n    GET_CONFIRM: '/confirm',\r\n    GET_CONFIRM_DEPOSIT: '/confirm-deposit',\r\n    GET_CONFIRM_WITHDRAWAL: '/confirm-withdrawal',\r\n    QUESTION_MARK: '?',\r\n};\r\n\r\nexport default constants;\r\n\r\n","const languageEn = {\r\n    WITHDRAWAL: 'Withdrawal',\r\n    WITHDRAWAL_SCREEN_DESC: 'Amount Of Money To Withdraw',\r\n    DEPOSIT: 'Deposit',\r\n    DEPOSIT_SCREEN_DESC: 'Amount Of Money To Deposit',\r\n    BALANCE: 'Balance',\r\n    BLIK_TRANSACTION: 'Blik Transaction',\r\n    BACK: 'Back',\r\n    HELP: 'Help',\r\n    LANGUAGE: 'Language',\r\n    LANGUAGE_SCREEN_DESC: 'Choose A Language',\r\n    HACK: 'Hack The ATM',\r\n    ATM: 'ATM',\r\n    BALANCE_SCREEN_DESC: 'Your Balance Is: ',\r\n    CONTACT: 'Contact:',\r\n    CONTACT_EMAIL: 'client@atmmachines.net',\r\n    CONTACT_PHONE: '+48 000 000 000',\r\n    POLISH: 'Polish',\r\n    ENGLISH: 'English',\r\n    PLN: 'PLN',\r\n    CONFIRM: 'Confirm',\r\n    CONFIRM_DEPOSIT_SCREEN_DESC: 'Do You Want To Deposit',\r\n    CONFIRM_WITHDRAWAL_SCREEN_DESC: 'Do You Want To Withdraw',\r\n    PROVIDE_AMOUNT: 'Provide Transaction Amout Please',\r\n    CANCEL: 'Cancel',\r\n    CUSTOM_AMOUNT: 'Custom Amount',\r\n    SUCCESS: 'Transaction Successful!',\r\n    TRANSACTION_FAIL: 'Transaction Failed!',\r\n    TRANSACTION_FAIL_MINIMAL_AMOUNT: 'Failed, Minimal Amount Of Transaction Is 1 PLN!',\r\n    TRANSACTION_FAIL_TOO_FEW_FUNDS: 'Failed, Too Few Funds In The Account',\r\n    CLEAR: 'Clear',\r\n    '20': '20 PLN',\r\n    '50': '50 PLN',\r\n    '100': '100 PLN',\r\n    '200': '200 PLN',\r\n    '500': '500 PLN'\r\n};\r\n\r\nexport default languageEn","const languagePl = {\r\n    WITHDRAWAL: 'Wypłać',\r\n    WITHDRAWAL_SCREEN_DESC: 'Ilość Pieniędzy Do Wypłacenia',\r\n    DEPOSIT: 'Wpłać',\r\n    DEPOSIT_SCREEN_DESC: 'Ilość Pieniędzy Do Wpłacenia',\r\n    BALANCE: 'Stan Konta',\r\n    BLIK_TRANSACTION: 'Tranzakcja Blik',\r\n    BACK: 'Powrót',\r\n    HELP: 'Pomoc',\r\n    LANGUAGE: 'Język',\r\n    LANGUAGE_SCREEN_DESC: 'Wybierz Język',\r\n    HACK: 'Shackuj Bankomat',\r\n    ATM: 'Bankomat',\r\n    BALANCE_SCREEN_DESC: 'Twój Stan Konta: ',\r\n    CONTACT: 'Kontakt:',\r\n    CONTACT_EMAIL: 'client@atmmachines.net',\r\n    CONTACT_PHONE: '+48 000 000 000',\r\n    POLISH: 'Polski',\r\n    ENGLISH: 'Angielski',\r\n    PLN: 'PLN',\r\n    CONFIRM: 'Potwierdź',\r\n    CONFIRM_DEPOSIT_SCREEN_DESC: 'Czy Chcesz Wpłacić',\r\n    CONFIRM_WITHDRAWAL_SCREEN_DESC: 'Czy Chcesz Wypłacić',\r\n    PROVIDE_AMOUNT: 'Wprowadź Wartość Tranzakcji',\r\n    CANCEL: 'Anuluj',\r\n    CUSTOM_AMOUNT: 'Inna Kwota',\r\n    SUCCESS: 'Tranzakcja Pomyślna!',\r\n    TRANSACTION_FAIL: 'Tranzakcja Niepomyślna!',\r\n    TRANSACTION_FAIL_MINIMAL_AMOUNT: 'Niepowodzenie, Minimalna Kwota Tranzakcji To 1 PLN!',\r\n    TRANSACTION_FAIL_TOO_FEW_FUNDS: 'Niepowodzenie, Zbyt Mało Środków Na Koncie!',\r\n    CLEAR: 'Wyczyść',\r\n    '20': '20 PLN',\r\n    '50': '50 PLN',\r\n    '100': '100 PLN',\r\n    '200': '200 PLN',\r\n    '500': '500 PLN'\r\n};\r\n\r\nexport default languagePl;","import languageEn from '../language/languageEN';\r\n\r\nconst initialState = {\r\n    balance: 2315,\r\n    transactionMsg: \"\",\r\n    transactionMoneyAmount: 0,\r\n    numKeysLocked: true,\r\n    language: {\r\n        ...languageEn\r\n    }\r\n};\r\n\r\nexport default initialState;","import {\r\n    CHANGE_LANG, SET_MONEY_AMOUNT, DEPOSIT_MONEY, TRANSACTION_MSG, LOCK_NUM_KEYS, UNLOCK_NUM_KEYS, WITHDRAW_MONEY\r\n} from '../actions/actionNames';\r\nimport constants from '../common/constants';\r\nimport languageEn from '../language/languageEN';\r\nimport languagePl from '../language/languagePL';\r\nimport initialState from '../state/initialState';\r\nconst paymentsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LANG:\r\n            const lang = action.language === constants.LANG_EN ? languageEn : languagePl;\r\n            return {\r\n                ...state,\r\n                language: {\r\n                    ...lang\r\n                }\r\n            };\r\n        case SET_MONEY_AMOUNT:\r\n            return {\r\n                ...state,\r\n                transactionMoneyAmount: action.amount\r\n            };\r\n        case DEPOSIT_MONEY:\r\n            return {\r\n                ...state,\r\n                balance: state.balance + state.transactionMoneyAmount\r\n            };\r\n        case WITHDRAW_MONEY:\r\n            return {\r\n                ...state,\r\n                balance: state.balance - state.transactionMoneyAmount\r\n            };\r\n        case TRANSACTION_MSG:\r\n            return {\r\n                ...state,\r\n                transactionMsg: action.msg\r\n            };\r\n        case LOCK_NUM_KEYS:\r\n            return {\r\n                ...state,\r\n                numKeysLocked: true,\r\n            };\r\n        case UNLOCK_NUM_KEYS:\r\n            return {\r\n                ...state,\r\n                numKeysLocked: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default paymentsReducer\r\n","import { combineReducers } from 'redux';\r\nimport paymentsReducer from './paymentsReducer';\r\n\r\nexport default combineReducers({\r\n    paymentsReducer\r\n});","export const colors = {\r\n    SCREEN: '#05905a',\r\n    CASE: '#224369',\r\n    KEYBOARD: '#14283e',\r\n    BUTTON_CONFIRM: '#05905a',\r\n    BUTTON_CLEAR: '#c7ba47',\r\n    BUTTON_CANCEL: '#e64364',\r\n    DISABLED: '#808080',\r\n    DISABLED_BG: '#dddddd',\r\n    DESCRIPTION_TEXT: '#07ff53',\r\n    DESCRIPTION: '#22436869',\r\n};","import styled from 'styled-components';\r\nimport constants from '../../../common/constants';\r\nimport { colors } from '../../../css/cssSimpleTheme';\r\n\r\n/*Column Components*/\r\nexport const ButtonsColumn = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: space-between;\r\n    margin: 1rem;\r\n    height: 50%;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: center;\r\n    ${props => props.wide ? \"width: 6rem;\" : \"width: 3rem;\"}\r\n    height: 3rem;\r\n    border-radius: 1rem;\r\n    font-weight: bolder;\r\n    font-size: 1rem;\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\r\n    justify-content: :center;\r\n    align-items: center;\r\n    color: ${colors.KEYBOARD};\r\n    ${props => props.bgColor ? `background-color: ${props.bgColor}` : null}\r\n    ${props => props.margin ? \"margin: .5rem;\" : null}\r\n    ${props => props.buttonBlocked ? `background-color: ${colors.DISABLED}; cursor: not-allowed;` : \"cursor: pointer;\"}\r\n\r\n    @media (max-width: 700px) {\r\n        border-radius: .5rem;\r\n        ${props => props.wide ? \"width: 6rem;\" : \"width: 2rem;\"}\r\n        font-size: .75rem;\r\n        height: 2rem;\r\n    }\r\n    @media (max-width: 600px) {\r\n        border-radius: .5rem;\r\n        ${props => props.wide ? \"width: 6rem;\" : \"width: 2rem;\"}\r\n        font-size: .65rem;\r\n        height: 2rem;\r\n    }\r\n`;\r\n\r\nexport const Display = styled.div`\r\n    flex-basis: 100%;\r\n    display: flex;\r\n    flex-flow: column;\r\n    height: 100%;\r\n`;\r\n\r\n/*View Components*/\r\nexport const View = styled.div`\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${colors.SCREEN};\r\n    margin-top: 1rem;\r\n    border-radius: 1rem;\r\n    display: flex;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const ViewColumn = styled.div`\r\n    flex: 1;\r\n    display: flex; \r\n    flex-flow: column;\r\n    justify-content: space-between;\r\n    ${props => props.side === constants.LEFT ? \"padding-right: 0.5rem;\" : \"padding-left: 0.5rem;\"}\r\n`;\r\n\r\nexport const ViewButtonDescriptionContainer = styled.div`\r\n    height: 4rem;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ViewButtonDescription = styled.div`\r\n    color: ${colors.DESCRIPTION_TEXT};\r\n    padding: 1.3rem;\r\n    background-color: ${colors.DESCRIPTION};\r\n    width: 100%;\r\n    height: 40%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: bolder;\r\n    ${props => props.unsupported ?\r\n        `color: ${colors.DISABLED};\r\n    background-color: ${colors.DISABLED_BG};`\r\n        : null}\r\n    ${props => props.side === constants.LEFT ?\r\n        `border-top-right-radius: .25rem;\r\n    border-bottom-right-radius: .25rem;`\r\n        :\r\n        `border-top-left-radius: .25rem;\r\n    border-bottom-left-radius: .25rem;`} \r\n    @media (max-width: 600px) {\r\n        font-size: 0.75rem;\r\n        justify-content: flex-start;\r\n    }\r\n    @media (max-width: 400px) {\r\n        font-size: .65rem;\r\n        height: 50%;\r\n    }\r\n`;\r\n\r\nexport const ViewColumnWrapper = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(50% + 2rem);\r\n`;\r\n\r\nexport const ViewTextContainer = styled.div`\r\n    flex-basis: 100%;\r\n    display: flex;\r\n    height: calc(50% - 2.4rem);\r\n    align-items: center;\r\n    align-content: center;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const ViewMainText = styled.h1`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-basis: 100%;\r\n    color: ${colors.DESCRIPTION_TEXT};\r\n    font-size: 4rem;\r\n    letter-spacing: 1rem;\r\n    margin: 0;\r\n    text-align: center;\r\n    word-break: break-word;\r\n    @media (max-width: 1000px) {\r\n        font-size: 2rem;\r\n        letter-spacing: .5rem;\r\n    }\r\n    @media (max-width: 500px) {\r\n        letter-spacing: normal;\r\n    }\r\n`;\r\n\r\n\r\nexport const ViewSecondaryText = styled.h1`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-basis: 100%;\r\n    color: ${props => props.overwriteColor ? `${props.overwriteColor};` : `${colors.DESCRIPTION_TEXT};`}\r\n    text-align: center;\r\n    margin: 0;\r\n    ${props => {\r\n        if (props.fakeInput) {\r\n            return `\r\n            &::after {\r\n                content: '|';\r\n                animation: flashing .25s linear infinite;\r\n                animation-direction: alternate;\r\n                @keyframes flashing {\r\n                    from {\r\n                        opacity: 0;\r\n                      }\r\n                    to {\r\n                    opacity: 1;\r\n                    }\r\n                }\r\n            }`;\r\n        }\r\n    }}\r\n    @media (max-width: 1000px) {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\n\r\n","import React from 'react';\r\nimport { View, ViewTextContainer, ViewMainText, ViewColumn, ViewColumnWrapper, ViewButtonDescription, ViewButtonDescriptionContainer } from '../reusable/utilityComponents';\r\nimport { connect } from 'react-redux';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DefaultScreenContent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <View>\r\n                <ViewTextContainer>\r\n                    <ViewMainText>{this.props.language.ATM}</ViewMainText>\r\n                </ViewTextContainer>\r\n                <ViewColumnWrapper>\r\n                    <ViewColumn side={constants.LEFT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language.WITHDRAWAL}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language.DEPOSIT}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language.BALANCE}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}>{this.props.language.BLIK_TRANSACTION}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                    <ViewColumn side={constants.RIGHT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}>{this.props.language.HACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.LANGUAGE}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer side={constants.RIGHT}>\r\n                            <ViewButtonDescription>{this.props.language.HELP}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer side={constants.RIGHT}>\r\n                            <ViewButtonDescription unsupported={true}>{this.props.language.BACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                </ViewColumnWrapper>\r\n            </View>\r\n        );\r\n    };\r\n}\r\n\r\nDefaultScreenContent.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.paymentsReducer.language\r\n});\r\n\r\nexport default connect(mapStateToProps)(DefaultScreenContent);","import React from 'react';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\n\r\nclass DefaultLeftColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_WITHDRAWAL}>\r\n                    <Button />\r\n                </Link>\r\n                <Link to={constants.GET_DEPOSIT}>\r\n                    <Button />\r\n                </Link>\r\n                <Link to={constants.GET_BALANCE}>\r\n                    <Button />\r\n                </Link>\r\n                <Button disabled buttonBlocked={true} />\r\n            </ButtonsColumn >\r\n        );\r\n    };\r\n}\r\n\r\nexport default DefaultLeftColumn;","import React from 'react';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\n\r\nclass DefaultRightColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Link to={constants.GET_LANGUAGE}><Button /></Link>\r\n                <Link to={constants.GET_HELP}><Button /></Link>\r\n                <Button disabled buttonBlocked={true} />\r\n            </ButtonsColumn>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DefaultRightColumn;","import React from 'react';\r\nimport { Display } from '../reusable/utilityComponents';\r\nimport DefaultScreenContent from './DefaultScreenContent';\r\nimport DefaultLeftColumn from './DefaultLeftColumn';\r\nimport DefaultRightColumn from './DefaultRightColumn';\r\n\r\nclass DefaultScreen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <DefaultLeftColumn />\r\n                <Display>\r\n                    <DefaultScreenContent />\r\n                </Display>\r\n                <DefaultRightColumn />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DefaultScreen;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    View, ViewTextContainer, ViewMainText, ViewColumn, ViewColumnWrapper, ViewButtonDescription, ViewButtonDescriptionContainer, ViewSecondaryText\r\n} from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport { colors } from '../../../css/cssSimpleTheme';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BalanceScreenContent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <View>\r\n                <ViewTextContainer>\r\n                    <ViewMainText>{this.props.language.BALANCE}</ViewMainText>\r\n                    {this.props.transactionMsg ? <ViewSecondaryText overwriteColor={colors.BUTTON_CLEAR}>{this.props.transactionMsg}</ViewSecondaryText> : null}\r\n                    <ViewSecondaryText>{this.props.language.BALANCE_SCREEN_DESC}{(this.props.balance).toFixed(2)}{constants.SPACE + this.props.language.PLN}</ViewSecondaryText>\r\n                </ViewTextContainer>\r\n                <ViewColumnWrapper>\r\n                    <ViewColumn side={constants.LEFT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                    <ViewColumn side={constants.RIGHT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.BACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                </ViewColumnWrapper>\r\n            </View>\r\n        );\r\n    };\r\n}\r\n\r\nBalanceScreenContent.propTypes = {\r\n    transactionMsg: PropTypes.string.isRequired,\r\n    language: PropTypes.object.isRequired,\r\n    balance: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    balance: state.paymentsReducer.balance,\r\n    language: state.paymentsReducer.language,\r\n    transactionMsg: state.paymentsReducer.transactionMsg,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BalanceScreenContent);","import React from 'react';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\n\r\nclass BalanceLeftColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n            </ButtonsColumn >\r\n        );\r\n    };\r\n}\r\n\r\nexport default BalanceLeftColumn;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport { pushTransactionMsgRequest } from '../../../actions/actions';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BalanceRightColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Link to={constants.GET_HOMEPAGE}>\r\n                    <Button onClick={() => this.props.pushTransactionMsgRequest()} />\r\n                </Link>\r\n            </ButtonsColumn>\r\n        );\r\n    };\r\n}\r\n\r\nBalanceRightColumn.propTypes = {\r\n    pushTransactionMsgRequest: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    pushTransactionMsgRequest\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BalanceRightColumn);","import React from 'react';\r\nimport { Display } from '../reusable/utilityComponents';\r\nimport BalanceScreenContent from './BalanceScreenContent';\r\nimport BalanceLeftColumn from './BalanceLeftColumn';\r\nimport BalanceRightColumn from './BalanceRightColumn';\r\n\r\nclass BalanceScreen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <BalanceLeftColumn />\r\n                <Display>\r\n                    <BalanceScreenContent />\r\n                </Display>\r\n                <BalanceRightColumn />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default BalanceScreen;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    View, ViewTextContainer, ViewMainText, ViewColumn, ViewColumnWrapper, ViewButtonDescription, ViewButtonDescriptionContainer, ViewSecondaryText\r\n} from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass HelpScreenContent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <View>\r\n                <ViewTextContainer>\r\n                    <ViewMainText>{this.props.language.HELP}</ViewMainText>\r\n                    <ViewSecondaryText>{this.props.language.CONTACT}</ViewSecondaryText>\r\n                    <ViewSecondaryText>{this.props.language.CONTACT_EMAIL}</ViewSecondaryText>\r\n                    <ViewSecondaryText>{this.props.language.CONTACT_PHONE}</ViewSecondaryText>\r\n                </ViewTextContainer>\r\n                <ViewColumnWrapper>\r\n                    <ViewColumn side={constants.LEFT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                    <ViewColumn side={constants.RIGHT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.BACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                </ViewColumnWrapper>\r\n            </View>\r\n        );\r\n    };\r\n}\r\n\r\nHelpScreenContent.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.paymentsReducer.language\r\n});\r\n\r\nexport default connect(mapStateToProps)(HelpScreenContent);","import React from 'react';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\n\r\nclass HelpLeftColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n            </ButtonsColumn >\r\n        );\r\n    };\r\n}\r\n\r\nexport default HelpLeftColumn;","import React from 'react';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\n\r\nclass HelpRightColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Link to={constants.GET_HOMEPAGE}>\r\n                    <Button />\r\n                </Link>\r\n            </ButtonsColumn>\r\n        );\r\n    };\r\n}\r\n\r\nexport default HelpRightColumn;","import React from 'react';\r\nimport { Display } from '../reusable/utilityComponents';\r\nimport HelpScreenContent from './HelpScreenContent';\r\nimport HelpLeftColumn from './HelpLeftColumn';\r\nimport HelpRightColumn from './HelpRightColumn';\r\n\r\nclass HelpScreen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <HelpLeftColumn />\r\n                <Display>\r\n                    <HelpScreenContent />\r\n                </Display>\r\n                <HelpRightColumn />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default HelpScreen;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    View, ViewTextContainer, ViewMainText, ViewColumn, ViewColumnWrapper, ViewButtonDescription, ViewButtonDescriptionContainer, ViewSecondaryText\r\n} from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LanguageScreenContent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <View>\r\n                <ViewTextContainer>\r\n                    <ViewMainText>{this.props.language.LANGUAGE}</ViewMainText>\r\n                    <ViewSecondaryText>{this.props.language.LANGUAGE_SCREEN_DESC}</ViewSecondaryText>\r\n                </ViewTextContainer>\r\n                <ViewColumnWrapper>\r\n                    <ViewColumn side={constants.LEFT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language.ENGLISH}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language.POLISH}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                    <ViewColumn side={constants.RIGHT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.BACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                </ViewColumnWrapper>\r\n            </View>\r\n        );\r\n    };\r\n}\r\n\r\nLanguageScreenContent.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.paymentsReducer.language\r\n});\r\n\r\nexport default connect(mapStateToProps)(LanguageScreenContent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeLanguageRequest } from '../../../actions/actions';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LanguageLeftColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Button onClick={() => this.props.changeLanguageRequest(constants.LANG_EN)}/>\r\n                <Button onClick={() => this.props.changeLanguageRequest(constants.LANG_PL)}/>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n            </ButtonsColumn >\r\n        );\r\n    };\r\n}\r\n\r\nLanguageLeftColumn.propTypes = {\r\n    changeLanguageRequest: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    changeLanguageRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageLeftColumn);","import React from 'react';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\n\r\nclass LanguageRightColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Link to={constants.GET_HOMEPAGE}>\r\n                    <Button />\r\n                </Link>\r\n            </ButtonsColumn>\r\n        );\r\n    };\r\n}\r\n\r\nexport default LanguageRightColumn;","import React from 'react';\r\nimport { Display } from '../reusable/utilityComponents';\r\nimport LanguageScreenContent from './LanguageScreenContent';\r\nimport LanguageLeftColumn from './LanguageLeftColumn';\r\nimport LanguageRightColumn from './LanguageRightColumn';\r\n\r\nclass LanguageScreen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <LanguageLeftColumn />\r\n                <Display>\r\n                    <LanguageScreenContent />\r\n                </Display>\r\n                <LanguageRightColumn />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default LanguageScreen;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    View, ViewTextContainer, ViewMainText, ViewColumn, ViewColumnWrapper, ViewButtonDescription, ViewButtonDescriptionContainer, ViewSecondaryText\r\n} from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DepositScreenContent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <View>\r\n                <ViewTextContainer>\r\n                    <ViewMainText>{this.props.language.DEPOSIT}</ViewMainText>\r\n                    <ViewSecondaryText>{this.props.language.DEPOSIT_SCREEN_DESC}</ViewSecondaryText>\r\n                </ViewTextContainer>\r\n                <ViewColumnWrapper>\r\n                    <ViewColumn side={constants.LEFT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language[\"20\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language[\"50\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language[\"100\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language[\"200\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                    <ViewColumn side={constants.RIGHT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language[\"500\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.CUSTOM_AMOUNT}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.BACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                </ViewColumnWrapper>\r\n            </View>\r\n        );\r\n    };\r\n}\r\n\r\nDepositScreenContent.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.paymentsReducer.language\r\n});\r\n\r\nexport default connect(mapStateToProps)(DepositScreenContent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setMoneyAmountRequest } from '../../../actions/actions';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DepositLeftColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_CONFIRM_DEPOSIT}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(20)} />\r\n                </Link>\r\n                <Link to={constants.GET_CONFIRM_DEPOSIT}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(50)} />\r\n                </Link>\r\n                <Link to={constants.GET_CONFIRM_DEPOSIT}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(100)} />\r\n                </Link>\r\n                <Link to={constants.GET_CONFIRM_DEPOSIT}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(200)} />\r\n                </Link>\r\n            </ButtonsColumn >\r\n        );\r\n    };\r\n}\r\n\r\nDepositLeftColumn.propTypes = {\r\n    setMoneyAmountRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    setMoneyAmountRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DepositLeftColumn);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setMoneyAmountRequest } from '../../../actions/actions';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DepositRightColumn extends React.Component {\r\n    customAmount = () => {\r\n        this.props.setMoneyAmountRequest(0);\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_CONFIRM_DEPOSIT}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(500)} />\r\n                </Link>\r\n                <Link to={constants.GET_CONFIRM_DEPOSIT}>\r\n                    <Button onClick={() => this.customAmount()} />\r\n                </Link>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Link to={constants.GET_HOMEPAGE}>\r\n                    <Button />\r\n                </Link>\r\n            </ButtonsColumn>\r\n        );\r\n    };\r\n}\r\n\r\nDepositRightColumn.propTypes = {\r\n    setMoneyAmountRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    setMoneyAmountRequest,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DepositRightColumn);","import React from 'react';\r\nimport { Display } from '../reusable/utilityComponents';\r\nimport DepositScreenContent from './DepositScreenContent';\r\nimport DepositLeftColumn from './DepositLeftColumn';\r\nimport DepositRightColumn from './DepositRightColumn';\r\n\r\nclass DepositScreen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <DepositLeftColumn />\r\n                <Display>\r\n                    <DepositScreenContent />\r\n                </Display>\r\n                <DepositRightColumn />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DepositScreen;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    View, ViewTextContainer, ViewMainText, ViewColumn, ViewColumnWrapper, ViewButtonDescription, ViewButtonDescriptionContainer, ViewSecondaryText\r\n} from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass WithdrawalScreenContent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <View>\r\n                <ViewTextContainer>\r\n                    <ViewMainText>{this.props.language.WITHDRAWAL}</ViewMainText>\r\n                    <ViewSecondaryText>{this.props.language.WITHDRAWAL_SCREEN_DESC}</ViewSecondaryText>\r\n                </ViewTextContainer>\r\n                <ViewColumnWrapper>\r\n                    <ViewColumn side={constants.LEFT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language[\"20\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language[\"50\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language[\"100\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language[\"200\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                    <ViewColumn side={constants.RIGHT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language[\"500\"]}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.CUSTOM_AMOUNT}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.BACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                </ViewColumnWrapper>\r\n            </View>\r\n        );\r\n    };\r\n}\r\n\r\nWithdrawalScreenContent.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.paymentsReducer.language,\r\n});\r\n\r\nexport default connect(mapStateToProps)(WithdrawalScreenContent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setMoneyAmountRequest } from '../../../actions/actions';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass WithdrawalLeftColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_CONFIRM_WITHDRAWAL}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(20)} />\r\n                </Link>\r\n                <Link to={constants.GET_CONFIRM_WITHDRAWAL}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(50)} />\r\n                </Link>\r\n                <Link to={constants.GET_CONFIRM_WITHDRAWAL}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(100)} />\r\n                </Link>\r\n                <Link to={constants.GET_CONFIRM_WITHDRAWAL}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(200)} />\r\n                </Link>\r\n            </ButtonsColumn >\r\n        );\r\n    };\r\n}\r\n\r\nWithdrawalLeftColumn.propTypes = {\r\n    setMoneyAmountRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    setMoneyAmountRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithdrawalLeftColumn);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setMoneyAmountRequest } from '../../../actions/actions';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass WithdrawalRightColumn extends React.Component {\r\n    customAmount = () => {\r\n        this.props.setMoneyAmountRequest(0);\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_CONFIRM_WITHDRAWAL}>\r\n                    <Button onClick={() => this.props.setMoneyAmountRequest(500)} />\r\n                </Link>\r\n                <Link to={constants.GET_CONFIRM_WITHDRAWAL}>\r\n                    <Button onClick={() => this.customAmount()} />\r\n                </Link>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Link to={constants.GET_HOMEPAGE}>\r\n                    <Button />\r\n                </Link>\r\n            </ButtonsColumn>\r\n        );\r\n    };\r\n}\r\n\r\nWithdrawalRightColumn.propTypes = {\r\n    setMoneyAmountRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    setMoneyAmountRequest,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithdrawalRightColumn);","import React from 'react';\r\nimport { Display } from '../reusable/utilityComponents';\r\nimport WithdrawalScreenContent from './WithdrawalScreenContent';\r\nimport WithdrawalLeftColumn from './WithdrawalLeftColumn';\r\nimport WithdrawalRightColumn from './WithdrawalRightColumn';\r\n\r\nclass WithdrawalScreen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <WithdrawalLeftColumn />\r\n                <Display>\r\n                    <WithdrawalScreenContent />\r\n                </Display>\r\n                <WithdrawalRightColumn />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default WithdrawalScreen;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    View, ViewTextContainer, ViewMainText, ViewColumn, ViewColumnWrapper, ViewButtonDescription, ViewButtonDescriptionContainer, ViewSecondaryText\r\n} from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ConfirmScreenContent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <View>\r\n                <ViewTextContainer>\r\n                    <ViewMainText>{this.props.language.DEPOSIT}</ViewMainText>\r\n                    {/* Just don't want to create another Component.js for 2 text elements */}\r\n                    {(() => {\r\n                        if (this.props.transactionMoneyAmount) {\r\n                            return (\r\n                                <>\r\n                                    <ViewSecondaryText>{this.props.language.CONFIRM_DEPOSIT_SCREEN_DESC}</ViewSecondaryText>\r\n                                    <ViewSecondaryText fakeInput={true}>{(this.props.transactionMoneyAmount).toFixed(2)} {this.props.language.PLN}</ViewSecondaryText>\r\n                                    <ViewSecondaryText>{constants.QUESTION_MARK}</ViewSecondaryText>\r\n                                </>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <>\r\n                                <ViewSecondaryText>{this.props.language.PROVIDE_AMOUNT}</ViewSecondaryText>\r\n                                <ViewSecondaryText fakeInput={true}>{(this.props.transactionMoneyAmount).toFixed(2)} {this.props.language.PLN}</ViewSecondaryText>\r\n                            </>\r\n                        );\r\n                    })()}\r\n                </ViewTextContainer>\r\n                <ViewColumnWrapper>\r\n                    <ViewColumn side={constants.LEFT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language.CONFIRM}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                    <ViewColumn side={constants.RIGHT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.CANCEL}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.BACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                </ViewColumnWrapper>\r\n            </View>\r\n        );\r\n    };\r\n}\r\n\r\nConfirmScreenContent.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n    transactionMoneyAmount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.paymentsReducer.language,\r\n    transactionMoneyAmount: state.paymentsReducer.transactionMoneyAmount\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfirmScreenContent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { depositMoneyRequest, lockNumericKeysRequest } from '../../../actions/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ConfirmLeftColumn extends React.Component {\r\n    confirm = () => {\r\n        this.props.depositMoneyRequest(this.props.transactionMoneyAmount, this.props.language);\r\n        this.props.lockNumericKeysRequest();\r\n    };\r\n    \r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_BALANCE}>\r\n                    <Button onClick={() => this.confirm()} />\r\n                </Link>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n            </ButtonsColumn >\r\n        );\r\n    };\r\n}\r\n\r\nConfirmLeftColumn.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n    transactionMoneyAmount: PropTypes.number.isRequired,\r\n    depositMoneyRequest: PropTypes.func.isRequired,\r\n    lockNumericKeysRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    transactionMoneyAmount: state.paymentsReducer.transactionMoneyAmount,\r\n    language: state.paymentsReducer.language\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    depositMoneyRequest,\r\n    lockNumericKeysRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmLeftColumn);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { lockNumericKeysRequest } from '../../../actions/actions';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ConfirmRightColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_HOMEPAGE}>\r\n                    <Button onClick={() => this.props.lockNumericKeysRequest()} />\r\n                </Link>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Link to={constants.GET_DEPOSIT}>\r\n                    <Button onClick={() => this.props.lockNumericKeysRequest()} />\r\n                </Link>\r\n            </ButtonsColumn>\r\n        );\r\n    };\r\n}\r\n\r\nConfirmRightColumn.propTypes = {\r\n    lockNumericKeysRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    lockNumericKeysRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmRightColumn);","import React from 'react';\r\nimport { Display } from '../reusable/utilityComponents';\r\nimport ConfirmScreenContent from './ConfirmScreenContent';\r\nimport ConfirmLeftColumn from './ConfirmLeftColumn';\r\nimport ConfirmRightColumn from './ConfirmRightColumn';\r\n\r\nclass ConfirmScreen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <ConfirmLeftColumn />\r\n                <Display>\r\n                    <ConfirmScreenContent />\r\n                </Display>\r\n                <ConfirmRightColumn />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ConfirmScreen;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    View, ViewTextContainer, ViewMainText, ViewColumn, ViewColumnWrapper, ViewButtonDescription, ViewButtonDescriptionContainer, ViewSecondaryText\r\n} from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ConfirmScreenContent extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <View>\r\n                <ViewTextContainer>\r\n                    <ViewMainText>{this.props.language.WITHDRAWAL}</ViewMainText>\r\n                    {/* Just don't want to create another Component.js for 2 text elements */}\r\n                    {(() => {\r\n                        if (this.props.transactionMoneyAmount) {\r\n                            return (\r\n                                <>\r\n                                    <ViewSecondaryText>{this.props.language.CONFIRM_WITHDRAWAL_SCREEN_DESC}</ViewSecondaryText>\r\n                                    <ViewSecondaryText fakeInput={true}>{(this.props.transactionMoneyAmount).toFixed(2)} {this.props.language.PLN}</ViewSecondaryText>\r\n                                    <ViewSecondaryText>?</ViewSecondaryText>\r\n                                </>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <>\r\n                                <ViewSecondaryText>{this.props.language.PROVIDE_AMOUNT}</ViewSecondaryText>\r\n                                <ViewSecondaryText fakeInput={true}>{(this.props.transactionMoneyAmount).toFixed(2)} {this.props.language.PLN}</ViewSecondaryText>\r\n                            </>\r\n                        );\r\n                    })()}\r\n\r\n                </ViewTextContainer>\r\n                <ViewColumnWrapper>\r\n                    <ViewColumn side={constants.LEFT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT}>{this.props.language.CONFIRM}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.LEFT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                    <ViewColumn side={constants.RIGHT}>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.CANCEL}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT} unsupported={true}></ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                        <ViewButtonDescriptionContainer>\r\n                            <ViewButtonDescription side={constants.RIGHT}>{this.props.language.BACK}</ViewButtonDescription>\r\n                        </ViewButtonDescriptionContainer>\r\n                    </ViewColumn>\r\n                </ViewColumnWrapper>\r\n            </View>\r\n        );\r\n    };\r\n}\r\n\r\nConfirmScreenContent.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n    transactionMoneyAmount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.paymentsReducer.language,\r\n    transactionMoneyAmount: state.paymentsReducer.transactionMoneyAmount\r\n});\r\n\r\nexport default connect(mapStateToProps)(ConfirmScreenContent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withdrawMoneyRequest, lockNumericKeysRequest } from '../../../actions/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ConfirmLeftColumn extends React.Component {\r\n    confirm = () => {\r\n        this.props.withdrawMoneyRequest(this.props.transactionMoneyAmount, this.props.language, this.props.balance);\r\n        this.props.lockNumericKeysRequest();\r\n    };\r\n    \r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_BALANCE}>\r\n                    <Button onClick={() => this.confirm()} />\r\n                </Link>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n            </ButtonsColumn >\r\n        );\r\n    };\r\n}\r\n\r\nConfirmLeftColumn.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n    transactionMoneyAmount: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired,\r\n    lockNumericKeysRequest: PropTypes.func.isRequired,\r\n    withdrawMoneyRequest: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    transactionMoneyAmount: state.paymentsReducer.transactionMoneyAmount,\r\n    language: state.paymentsReducer.language,\r\n    balance: state.paymentsReducer.balance\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    withdrawMoneyRequest,\r\n    lockNumericKeysRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmLeftColumn);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setMoneyAmountRequest, lockNumericKeysRequest } from '../../../actions/actions';\r\nimport { ButtonsColumn, Button } from '../reusable/utilityComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport constants from '../../../common/constants';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ConfirmRightColumn extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ButtonsColumn>\r\n                <Link to={constants.GET_HOMEPAGE}>\r\n                    <Button onClick={() => this.props.lockNumericKeysRequest()} />\r\n                </Link>\r\n                <Button disabled buttonBlocked={true} />\r\n                <Button disabled buttonBlocked={true} />\r\n                <Link to={constants.GET_WITHDRAWAL}>\r\n                    <Button onClick={() => this.props.lockNumericKeysRequest()} />\r\n                </Link>\r\n            </ButtonsColumn>\r\n        );\r\n    };\r\n}\r\n\r\nConfirmRightColumn.propTypes = {\r\n    lockNumericKeysRequest: PropTypes.func.isRequired,\r\n    setMoneyAmountRequest: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    setMoneyAmountRequest,\r\n    lockNumericKeysRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmRightColumn);","import React from 'react';\r\nimport { Display } from '../reusable/utilityComponents';\r\nimport ConfirmScreenContent from './ConfirmScreenContent';\r\nimport ConfirmLeftColumn from './ConfirmLeftColumn';\r\nimport ConfirmRightColumn from './ConfirmRightColumn';\r\n\r\nclass ConfirmScreen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <ConfirmLeftColumn />\r\n                <Display>\r\n                    <ConfirmScreenContent />\r\n                </Display>\r\n                <ConfirmRightColumn />\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ConfirmScreen;","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory({});","import React from 'react';\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport DefaultScreen from './displayViews/default/DefaultScreen';\r\nimport BalanceScreen from './displayViews/balance/BalanceScreen';\r\nimport HelpScreen from './displayViews/help/HelpScreen';\r\nimport LanguageScreen from './displayViews/language/LanguageScreen';\r\nimport DepositScreen from './displayViews/deposit/DepositScreen';\r\nimport WithdrawalScreen from './displayViews/withdrawal/WithdrawalScreen';\r\nimport ConfirmDepositScreen from './displayViews/confirmDeposit/ConfirmScreen';\r\nimport ConfirmWithdrawalScreen from './displayViews/confirmWithdrawal/ConfirmScreen';\r\nimport history from '../common/history';\r\nimport constants from '../common/constants';\r\nimport { colors } from '../css/cssSimpleTheme';\r\n\r\nconst ScreenContainer = styled.div`\r\n    margin-top: 2rem;\r\n    display: flex;\r\n    width: 40vw;\r\n    height: 30vw;\r\n    background-color: ${colors.CASE};\r\n    border-top-left-radius: 1rem;\r\n    border-top-right-radius: 1rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    align-items: flex-end;\r\n    @media (max-width: 1500px) {\r\n        width: 80vw;\r\n        height: 50vh;\r\n    }\r\n    @media (max-width: 1100px) {\r\n        height: 50vw;\r\n    }\r\n    @media (max-width: 900px) {\r\n        height: 60vw;\r\n    }\r\n    @media (max-width: 900px) {\r\n        height: 50vh;\r\n    }\r\n    @media (max-width: 700px) {\r\n        width: 95vw;\r\n    }\r\n`;\r\n\r\nclass Screen extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <ScreenContainer>\r\n                <Router history={history}>\r\n                    <Switch>\r\n                        <Route exact path={constants.GET_HOMEPAGE} component={DefaultScreen} />\r\n                        <Route path={constants.GET_BALANCE} component={BalanceScreen} />\r\n                        <Route path={constants.GET_HELP} component={HelpScreen} />\r\n                        <Route path={constants.GET_LANGUAGE} component={LanguageScreen} />\r\n                        <Route path={constants.GET_WITHDRAWAL} component={WithdrawalScreen} />\r\n                        <Route path={constants.GET_DEPOSIT} component={DepositScreen} />\r\n                        <Route path={constants.GET_CONFIRM_DEPOSIT} component={ConfirmDepositScreen} />\r\n                        <Route path={constants.GET_CONFIRM_WITHDRAWAL} component={ConfirmWithdrawalScreen} />\r\n                        <Route component={DefaultScreen} />\r\n                    </Switch>\r\n                </Router>\r\n            </ScreenContainer>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Screen;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { depositMoneyRequest, setMoneyAmountRequest, unlockNumericKeysRequest, lockNumericKeysRequest, withdrawMoneyRequest } from '../actions/actions';\r\nimport { Button } from './displayViews/reusable/utilityComponents';\r\nimport history from '../common/history';\r\nimport constants from '../common/constants';\r\nimport { colors } from '../css/cssSimpleTheme';\r\n\r\nconst KeyboardContainer = styled.div`\r\n    display: flex;\r\n    width: 40vw;\r\n    background-color: ${colors.CASE};\r\n    border-bottom-left-radius: 1rem;\r\n    border-bottom-right-radius: 1rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    justify-content: center;\r\n    @media (max-width: 1500px) {\r\n        width: 80vw;\r\n    }\r\n    @media (max-width: 700px) {\r\n        width: 95vw;\r\n    }\r\n`;\r\nconst Keys = styled.div`\r\n    background-color: ${colors.KEYBOARD};\r\n    border-radius: 1rem;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    padding: 0.5rem;\r\n`;\r\n\r\nconst KeysRow = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nclass Keyboard extends React.Component {\r\n    cancelTransaction = () => {\r\n        if (window.location.pathname.includes(constants.CONFIRM)) {\r\n            this.props.lockNumericKeysRequest();\r\n            history.push(constants.GET_HOMEPAGE);\r\n        }\r\n    };\r\n\r\n    confirmTransaction = () => {\r\n        if (window.location.pathname === constants.GET_CONFIRM_DEPOSIT) {\r\n            this.props.depositMoneyRequest(this.props.transactionMoneyAmount, this.props.language);\r\n            this.props.lockNumericKeysRequest();\r\n            history.push(constants.GET_BALANCE);\r\n        }\r\n\r\n        if (window.location.pathname === constants.GET_CONFIRM_WITHDRAWAL) {\r\n            this.props.withdrawMoneyRequest(this.props.transactionMoneyAmount, this.props.language, this.props.balance);\r\n            this.props.lockNumericKeysRequest();\r\n            history.push(constants.GET_BALANCE);\r\n        }\r\n    };\r\n\r\n    clearInput = () => {\r\n        if (window.location.pathname.includes(constants.GET_CONFIRM) && !this.props.numKeysLocked) {\r\n            this.props.setMoneyAmountRequest(0);\r\n        }\r\n    };\r\n\r\n    setTransactionMoneyAmount = (number) => {\r\n        //don't have to check location pathname like above\r\n        if (this.props.numKeysLocked && this.props.transactionMoneyAmount !== 0) return;\r\n        this.props.unlockNumericKeysRequest();\r\n        //1 + 2 = 12, \r\n        //0 + 2 = 2\r\n        const amount = this.props.transactionMoneyAmount ? parseInt(this.props.transactionMoneyAmount + number.toString()) : number;\r\n        this.props.setMoneyAmountRequest(amount);\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <KeyboardContainer>\r\n                <Keys>\r\n                    <KeysRow>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(1)} margin={true}>1</Button>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(2)} margin={true}>2</Button>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(3)} margin={true}>3</Button>\r\n                        <Button onClick={() => this.confirmTransaction()} wide={true} bgColor={colors.BUTTON_CONFIRM} margin={true}>{this.props.language.CONFIRM}</Button>\r\n                    </KeysRow>\r\n                    <KeysRow>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(4)} margin={true}>4</Button>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(5)} margin={true}>5</Button>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(6)} margin={true}>6</Button>\r\n                        <Button onClick={() => this.clearInput()} wide={true} bgColor={colors.BUTTON_CLEAR} margin={true}>{this.props.language.CLEAR}</Button>\r\n                    </KeysRow>\r\n                    <KeysRow>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(7)} margin={true}>7</Button>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(8)} margin={true}>8</Button>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(9)} margin={true}>9</Button>\r\n                        <Button onClick={() => this.cancelTransaction()} wide={true} bgColor={colors.BUTTON_CANCEL} margin={true}>{this.props.language.CANCEL}</Button>\r\n                    </KeysRow>\r\n                    <KeysRow>\r\n                        <Button onClick={() => this.setTransactionMoneyAmount(0)} margin={true}>0</Button>\r\n                        <Button margin={true}></Button>\r\n                        <Button margin={true}></Button>\r\n                        <Button wide={true} margin={true}></Button>\r\n                    </KeysRow>\r\n                </Keys>\r\n            </KeyboardContainer>\r\n        );\r\n    };\r\n}\r\n\r\nKeyboard.propTypes = {\r\n    language: PropTypes.object.isRequired,\r\n    transactionMoneyAmount: PropTypes.number.isRequired,\r\n    numKeysLocked: PropTypes.bool.isRequired,\r\n    balance: PropTypes.number.isRequired,\r\n    depositMoneyRequest: PropTypes.func.isRequired,\r\n    setMoneyAmountRequest: PropTypes.func.isRequired,\r\n    unlockNumericKeysRequest: PropTypes.func.isRequired,\r\n    lockNumericKeysRequest: PropTypes.func.isRequired,\r\n    withdrawMoneyRequest: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.paymentsReducer.language,\r\n    transactionMoneyAmount: state.paymentsReducer.transactionMoneyAmount,\r\n    numKeysLocked: state.paymentsReducer.numKeysLocked,\r\n    balance: state.paymentsReducer.balance\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    depositMoneyRequest,\r\n    setMoneyAmountRequest,\r\n    unlockNumericKeysRequest,\r\n    lockNumericKeysRequest,\r\n    withdrawMoneyRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Keyboard);","import { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { RootSaga } from './sagas/saga';\r\nimport React, { Component } from 'react';\r\nimport reducer from './reducers/reducers';\r\nimport Screen from './components/Screen';\r\nimport KeyBoard from './components/Keyboard';\r\nimport './css/fontawesome/css/all.min.css';\r\nimport './css/App.css';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(RootSaga);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Screen />\r\n        <KeyBoard />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}